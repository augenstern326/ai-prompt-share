{"version":3,"file":"js/342.b457af5f.js","mappings":"yuBAmGA,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,KAAI,GACdC,GAAUD,EAAAA,EAAAA,IAAI,IACdE,GAAQF,EAAAA,EAAAA,IAAI,GACZG,GAAUH,EAAAA,EAAAA,IAAI,GACdI,GAAOJ,EAAAA,EAAAA,IAAI,IACXK,GAAgBL,EAAAA,EAAAA,IAAI,IACpBM,GAAeN,EAAAA,EAAAA,IAAI,IACnBO,GAAaP,EAAAA,EAAAA,IAAI,IACjBQ,GAAWR,EAAAA,EAAAA,IAAI,GAGfS,EAAYC,UAChB,IACE,MAAMC,QAAYC,EAAAA,WAAIC,IAAIC,aACT,MAAbH,EAAII,OACNR,EAAWS,MAAQL,EAAIM,KAAKC,KAAIL,IAAO,CACrCM,MAAON,EAAIO,KACXJ,MAAOH,EAAIQ,OAGjB,CAAE,MAAOC,GACPC,QAAQD,MAAM,WAAYA,EAC5B,GAIIE,EAAed,UACnBX,EAAQiB,OAAQ,EAChB,IACE,MAAML,QAAYC,EAAAA,WAAIa,OAAOC,cAAc,CACzCvB,QAASA,EAAQa,MACjBZ,KAAMA,EAAKY,MACXW,QAAStB,EAAcW,MACvBY,OAAQtB,EAAaU,MAAMa,OAAS,EAAIvB,EAAaU,WAAQc,EAC7DtB,SAAUA,EAASQ,QAEJ,MAAbL,EAAII,OACNd,EAAQe,MAAQL,EAAIM,KAAKc,QACzB7B,EAAMc,MAAQL,EAAIM,KAAKf,MAE3B,CAAE,MAAOoB,GACPC,QAAQD,MAAM,YAAaA,EAC7B,CAAE,QACAvB,EAAQiB,OAAQ,CAClB,GAIIgB,EAAeA,KACnB7B,EAAQa,MAAQ,EAChBQ,GAAc,EAIVS,EAAkBA,KACtB9B,EAAQa,MAAQ,EAChBQ,GAAc,EAIVU,EAAmBA,KACvB/B,EAAQa,MAAQ,EAChBQ,GAAc,EAIVW,EAAoBC,IACxBjC,EAAQa,MAAQoB,EAChBZ,GAAc,EAIVa,EAAmBA,KACvB,MAAM,QAAEV,EAAO,KAAEW,EAAI,KAAEC,EAAI,KAAEH,GAASzC,EAAM6C,MAExCb,IACFtB,EAAcW,MAAQW,GAGpBW,IACFhC,EAAaU,MAAQsB,EAAKG,MAAM,KAAKvB,KAAIG,GAAMqB,OAAOrB,WAG3CS,IAATS,IACF/B,EAASQ,MAAQ0B,OAAOH,IAGtBH,IACFjC,EAAQa,MAAQ0B,OAAON,GACzB,EAIIO,EAAkBA,KACtB,MAAMH,EAAQ,CAAC,EAEXnC,EAAcW,QAChBwB,EAAMb,QAAUtB,EAAcW,OAG5BV,EAAaU,MAAMa,OAAS,IAC9BW,EAAMF,KAAOhC,EAAaU,MAAM4B,KAAK,MAGhB,IAAnBpC,EAASQ,QACXwB,EAAMD,KAAO/B,EAASQ,OAGF,IAAlBb,EAAQa,QACVwB,EAAMJ,KAAOjC,EAAQa,OAGvBnB,EAAOgD,KAAK,CAAEL,SAAQ,E,OAIxBM,EAAAA,EAAAA,IAAM,CAACzC,EAAeC,EAAcE,EAAUL,IAAU,KACtDwC,GAAiB,KAGnBI,EAAAA,EAAAA,KAAU,KACRV,IACA5B,IACAe,GAAc,I,gnFC1NhB,MAAMwB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://frontend/./src/views/prompt/PromptSquare.vue","webpack://frontend/./src/views/prompt/PromptSquare.vue?73b4"],"sourcesContent":["<template>\n  <div class=\"prompt-square\">\n    <div class=\"container\">\n      <div class=\"prompt-square-header\">\n        <h1>提示词广场</h1>\n        <p>发现和探索高质量的AI提示词</p>\n      </div>\n      \n      <!-- 搜索和筛选 -->\n      <div class=\"filter-section\">\n        <div class=\"search-box\">\n          <a-input-search\n            v-model:value=\"searchKeyword\"\n            placeholder=\"搜索提示词\"\n            enter-button\n            @search=\"handleSearch\"\n          />\n        </div>\n        \n        <div class=\"tag-filter\">\n          <a-select\n            v-model:value=\"selectedTags\"\n            mode=\"multiple\"\n            placeholder=\"选择标签筛选\"\n            style=\"width: 100%\"\n            :options=\"tagOptions\"\n            @change=\"handleTagChange\"\n          />\n        </div>\n        \n        <div class=\"sort-filter\">\n          <a-select\n            v-model:value=\"sortType\"\n            style=\"width: 120px\"\n            @change=\"handleSortChange\"\n          >\n            <a-select-option :value=\"0\">最新</a-select-option>\n            <a-select-option :value=\"1\">热门</a-select-option>\n            <a-select-option :value=\"2\">收藏</a-select-option>\n          </a-select>\n        </div>\n      </div>\n      \n      <!-- 提示词列表 -->\n      <div class=\"prompt-list\">\n        <a-spin :spinning=\"loading\">\n          <template v-if=\"prompts.length > 0\">\n            <div class=\"prompt-cards\">\n              <div v-for=\"prompt in prompts\" :key=\"prompt.id\" class=\"prompt-card-wrapper\">\n                <router-link :to=\"`/prompt/detail/${prompt.id}`\">\n                  <div class=\"prompt-card\">\n                    <div class=\"prompt-card-image\">\n                      <img :src=\"prompt.imageUrl || '/default-prompt.jpg'\" :alt=\"prompt.title\" />\n                    </div>\n                    <div class=\"prompt-card-content\">\n                      <h3 class=\"prompt-card-title\">{{ prompt.title }}</h3>\n                      <div class=\"prompt-card-tags\">\n                        <span v-for=\"tag in prompt.tags.slice(0, 3)\" :key=\"tag.id\" class=\"tag\">{{ tag.name }}</span>\n                      </div>\n                      <div class=\"prompt-card-footer\">\n                        <div class=\"prompt-card-stats\">\n                          <span><a-icon type=\"like\" /> {{ prompt.likeCount }}</span>\n                          <span><a-icon type=\"dislike\" /> {{ prompt.dislikeCount }}</span>\n                          <span><a-icon type=\"star\" /> {{ prompt.favoriteCount }}</span>\n                        </div>\n                        <div class=\"prompt-card-user\">\n                          <a-avatar :src=\"prompt.userAvatar || '/avatar-default.png'\" size=\"small\" />\n                          <span>{{ prompt.username }}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </router-link>\n              </div>\n            </div>\n            \n            <!-- 分页 -->\n            <div class=\"pagination\">\n              <a-pagination\n                v-model:current=\"current\"\n                :total=\"total\"\n                :pageSize=\"size\"\n                show-quick-jumper\n                @change=\"handlePageChange\"\n              />\n            </div>\n          </template>\n          <a-empty v-else description=\"暂无数据\" />\n        </a-spin>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport api from '../../api'\n\nconst route = useRoute()\nconst router = useRouter()\nconst loading = ref(false)\nconst prompts = ref([])\nconst total = ref(0)\nconst current = ref(1)\nconst size = ref(12)\nconst searchKeyword = ref('')\nconst selectedTags = ref([])\nconst tagOptions = ref([])\nconst sortType = ref(0)\n\n// 获取标签列表\nconst fetchTags = async () => {\n  try {\n    const res = await api.tag.getTagList()\n    if (res.code === 200) {\n      tagOptions.value = res.data.map(tag => ({\n        label: tag.name,\n        value: tag.id\n      }))\n    }\n  } catch (error) {\n    console.error('获取标签列表失败', error)\n  }\n}\n\n// 获取提示词列表\nconst fetchPrompts = async () => {\n  loading.value = true\n  try {\n    const res = await api.prompt.getPromptList({\n      current: current.value,\n      size: size.value,\n      keyword: searchKeyword.value,\n      tagIds: selectedTags.value.length > 0 ? selectedTags.value : undefined,\n      sortType: sortType.value\n    })\n    if (res.code === 200) {\n      prompts.value = res.data.records\n      total.value = res.data.total\n    }\n  } catch (error) {\n    console.error('获取提示词列表失败', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 搜索\nconst handleSearch = () => {\n  current.value = 1\n  fetchPrompts()\n}\n\n// 标签筛选\nconst handleTagChange = () => {\n  current.value = 1\n  fetchPrompts()\n}\n\n// 排序方式\nconst handleSortChange = () => {\n  current.value = 1\n  fetchPrompts()\n}\n\n// 分页\nconst handlePageChange = (page) => {\n  current.value = page\n  fetchPrompts()\n}\n\n// 从URL参数中获取筛选条件\nconst getParamsFromUrl = () => {\n  const { keyword, tags, sort, page } = route.query\n  \n  if (keyword) {\n    searchKeyword.value = keyword\n  }\n  \n  if (tags) {\n    selectedTags.value = tags.split(',').map(id => Number(id))\n  }\n  \n  if (sort !== undefined) {\n    sortType.value = Number(sort)\n  }\n  \n  if (page) {\n    current.value = Number(page)\n  }\n}\n\n// 更新URL参数\nconst updateUrlParams = () => {\n  const query = {}\n  \n  if (searchKeyword.value) {\n    query.keyword = searchKeyword.value\n  }\n  \n  if (selectedTags.value.length > 0) {\n    query.tags = selectedTags.value.join(',')\n  }\n  \n  if (sortType.value !== 0) {\n    query.sort = sortType.value\n  }\n  \n  if (current.value !== 1) {\n    query.page = current.value\n  }\n  \n  router.push({ query })\n}\n\n// 监听筛选条件变化，更新URL\nwatch([searchKeyword, selectedTags, sortType, current], () => {\n  updateUrlParams()\n})\n\nonMounted(() => {\n  getParamsFromUrl()\n  fetchTags()\n  fetchPrompts()\n})\n</script>\n\n<style scoped>\n.prompt-square {\n  padding-bottom: 40px;\n}\n\n.prompt-square-header {\n  text-align: center;\n  margin-bottom: 32px;\n}\n\n.prompt-square-header h1 {\n  font-size: 32px;\n  margin-bottom: 8px;\n  background: var(--primary-gradient);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  display: inline-block;\n}\n\n.prompt-square-header p {\n  color: var(--text-color-light);\n  font-size: 16px;\n}\n\n.filter-section {\n  display: grid;\n  grid-template-columns: 1fr 2fr 120px;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n.prompt-list {\n  margin-top: 24px;\n}\n\n.prompt-cards {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 24px;\n  margin-bottom: 32px;\n}\n\n.prompt-card-wrapper {\n  width: 100%;\n}\n\n.prompt-card {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.prompt-card-image {\n  height: 180px;\n  overflow: hidden;\n}\n\n.prompt-card-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s;\n}\n\n.prompt-card:hover .prompt-card-image img {\n  transform: scale(1.05);\n}\n\n.prompt-card-content {\n  padding: 16px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.prompt-card-title {\n  font-size: 16px;\n  margin: 0 0 12px 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.prompt-card-tags {\n  margin-bottom: 12px;\n}\n\n.prompt-card-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: auto;\n}\n\n.prompt-card-stats {\n  display: flex;\n  gap: 12px;\n  color: var(--text-color-light);\n}\n\n.prompt-card-user {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--text-color-light);\n  font-size: 12px;\n}\n\n.pagination {\n  text-align: center;\n  margin-top: 32px;\n}\n\n@media (max-width: 1200px) {\n  .prompt-cards {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n@media (max-width: 992px) {\n  .prompt-cards {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .filter-section {\n    grid-template-columns: 1fr 1fr;\n  }\n  \n  .sort-filter {\n    grid-column: 1 / -1;\n    justify-self: end;\n  }\n}\n\n@media (max-width: 576px) {\n  .prompt-cards {\n    grid-template-columns: 1fr;\n  }\n  \n  .filter-section {\n    grid-template-columns: 1fr;\n    gap: 12px;\n  }\n  \n  .sort-filter {\n    justify-self: start;\n  }\n}\n</style>\n","import script from \"./PromptSquare.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PromptSquare.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PromptSquare.vue?vue&type=style&index=0&id=85acf01c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-85acf01c\"]])\n\nexport default __exports__"],"names":["route","useRoute","router","useRouter","loading","ref","prompts","total","current","size","searchKeyword","selectedTags","tagOptions","sortType","fetchTags","async","res","api","tag","getTagList","code","value","data","map","label","name","id","error","console","fetchPrompts","prompt","getPromptList","keyword","tagIds","length","undefined","records","handleSearch","handleTagChange","handleSortChange","handlePageChange","page","getParamsFromUrl","tags","sort","query","split","Number","updateUrlParams","join","push","watch","onMounted","__exports__"],"sourceRoot":""}